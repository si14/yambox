server_names_hash_bucket_size 64;

server {
    server_name www.{{ app_domain }};
    return 301 http://{{ app_domain }}$request_uri;
}

upstream backend {
    server 127.0.0.1:{{ cloj_port }};
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

error_page 404             /static/404.html;
error_page 500 502 503 504 /static/500.html;

## HTTP

server {
    listen       80;
    server_name  {{ app_domain }};

    return 301 https://{{ app_domain }}$request_uri;
}

## HTTPS

server {
    listen       443;
    server_name  {{ app_domain }};

    access_log off;
    #error_log off;

    ssl on;

	ssl_certificate /etc/nginx/ssl/ssl-bundle.crt;
	ssl_certificate_key /etc/nginx/ssl/ssl.key;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 15m;

    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains';

    location / {
        proxy_pass http://backend;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /static/ {
        alias /opt/{{ app_name }}/resources/public/;
        expires 1d;

        gzip_static on;
    }
}
